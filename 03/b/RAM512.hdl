// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    // RAM64を8つならべる64*8=512 876543210
    DMux8Way(in=load, sel=address[0..2], a=dma, b=dmb, c=dmc, d=dmd, e=dme, f=dmf, g=dmg, h=dmh);

    // loadビットが1なら,addressビットにより選択されたRAM64だけにload=1を入力
    RAM64(in=in, load=dma, address=address[3..8], out=a);
    RAM64(in=in, load=dmb, address=address[3..8], out=b);
    RAM64(in=in, load=dmc, address=address[3..8], out=c);
    RAM64(in=in, load=dmd, address=address[3..8], out=d);
    RAM64(in=in, load=dme, address=address[3..8], out=e);
    RAM64(in=in, load=dmf, address=address[3..8], out=f);
    RAM64(in=in, load=dmg, address=address[3..8], out=g);
    RAM64(in=in, load=dmh, address=address[3..8], out=h);

    // Mux8Way16で
    Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[0..2], out=out);
}